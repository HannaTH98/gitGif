{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","title","url","console","log","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","id","images","downsized_medium","GifGrid","loading","state","setstate","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categorias","ReactDOM","render","document","getElementById"],"mappings":"2MAKaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAErB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAaQ,OACI,sBAAMC,SARG,SAACC,GAClBA,EAAEC,iBACKJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAId,SACI,uBAAOO,KAAK,OACJC,MAAOT,EACPU,SAfA,SAACP,GACjBF,EAAcE,EAAEQ,OAAOF,a,QCN1BG,EAAc,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IAGhC,OADAC,QAAQC,IAAIH,EAAOC,GAEf,sBAAKG,UAAU,OAAf,UACE,qBAAKC,IAAKJ,EAAKK,IAAKN,IACpB,mCAAMA,EAAN,W,uBCPGO,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbR,EADa,0FAC8ES,UAAUF,IADxF,SAEAG,MAAMV,GAFN,cAEbW,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EACtB,MAAO,CACHC,GAAID,EAAIC,GACRlB,MAAOiB,EAAIjB,MACXC,IAAG,UAAEgB,EAAIE,cAAN,aAAE,EAAYC,iBAAiBnB,QAT3B,kBAYZc,GAZY,4CAAH,sDCEPM,EAAU,SAAC,GAAgB,IAAfb,EAAc,EAAdA,SAEtB,ECAyB,SAACA,GAEzB,MAA0BtB,mBAAS,CAC9B4B,KAAM,GACNQ,SAAS,IAFd,mBAAOC,EAAP,KAAcC,EAAd,KAeC,OAXGC,qBAAU,WACNlB,EAAQC,GACPkB,MAAM,SAAAC,GACHC,YAAY,WACRJ,EAAS,CACLV,KAAMa,EACNL,SAAS,MAEd,WAER,CAACd,IACAe,EDjByBM,CAAarB,GAAjCW,EAAd,EAAQL,KAAcQ,EAAtB,EAAsBA,QAErB,OACK,qCACG,6BAAKd,IAEJc,GAAW,6CAEZ,qBAAKlB,UAAU,YAAf,SAEYe,EAAOH,KAAK,SAACC,GAAD,OACP,cAAC,EAAD,eAEaA,GADHA,EAAIC,aEZ9BY,EAAe,WACxB,MAAoC5C,mBAAU,CAAC,oBAA/C,mBAAO6C,EAAP,KAAmB9C,EAAnB,KACA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BAEI8C,EAAWf,KAAK,SAACR,GAAD,OACR,cAAC,EAAD,CAEIA,SAAUA,GADLA,YCXjCwB,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.769662ee.chunk.js","sourcesContent":["\r\n//Agrega la categoria a la pantalla que se busque condicionando a que haya 2 caracteres\r\nimport React, {useState} from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategorias}) => {\r\n        \r\n        const [inputValue, setinputValue] = useState('');\r\n        \r\n        const handleInputChange=(e)=>{\r\n                setinputValue(e.target.value);\r\n        } \r\n\r\n        const handleSubmit = (e) =>{\r\n            e.preventDefault();\r\n                if(inputValue.trim().length > 2){\r\n                    setCategorias(cats => [inputValue, ...cats,]);\r\n                    setinputValue('');\r\n                }\r\n        }\r\n                return (\r\n                    <form onSubmit={ handleSubmit}>\r\n                        <input type=\"text\"\r\n                                value={inputValue}\r\n                                onChange={handleInputChange}>\r\n                        </input>\r\n                    </form>\r\n                 )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategorias: PropTypes.func.isRequired\r\n} \r\n","\r\n//Aqui le da estructura a la informacÃ³n \r\nimport React from 'react'\r\n\r\nexport const GifGridItem = ({title, url}) => {\r\n    \r\n    console.log(title, url);\r\n    return (\r\n        <div className=\"card\">\r\n          <img src={url} alt={title}></img>\r\n          <h3> {title} </h3>\r\n        </div>\r\n    )\r\n}\r\n","\r\n//Aqui lee el json y lo convierte en un objeto java desestructurado\r\n\r\nexport const getGifs = async( category) =>{\r\n    const url =   `https://api.giphy.com/v1/gifs/search?api_key=zrYWIg6VZTdlmbFxAffO7qszVqov67s5&q=${encodeURI(category)}`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n            return {\r\n                id: img.id,\r\n                title: img.title,\r\n                url: img.images?.downsized_medium.url\r\n            }\r\n    })\r\n    return gifs;\r\n}","//Estrucutura la pantalla llamando los items \r\n\r\nimport { GifGridItem } from './GifGridItem';\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\"\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n   const { data: images, loading} =  useFetchGifs(category);\r\n\r\n    return (\r\n         <>\r\n            <h3>{category}</h3>\r\n           \r\n            {loading && <p> Cargando...</p>} \r\n              \r\n            <div className=\"card-grid\">          \r\n                    {\r\n                        images.map( (img) => (\r\n                             <GifGridItem \r\n                                  key={img.id}\r\n                                      {...img}\r\n                             />        \r\n                        ))\r\n                    }             \r\n            </div> \r\n            \r\n         </>\r\n    )\r\n}\r\n","//Aqui checa si cambio el componente y llama al objeto para extraer los datos necesarios\r\n//Osea carga los componentes \r\n\r\nimport { useState, useEffect } from \"react\"\r\nimport { getGifs } from '../helpers/getGifs';\r\n//Custom hooks\r\n\r\nexport const useFetchGifs = (category) => {\r\n   \r\n    const [state, setstate] = useState({\r\n         data: [],\r\n         loading: true\r\n    });\r\n        useEffect(() => {\r\n            getGifs(category)\r\n            .then( imgs => {\r\n                setTimeout( () =>{ \r\n                    setstate({\r\n                        data: imgs,\r\n                        loading: false\r\n                    });\r\n                }, 1500)\r\n            })\r\n        }, [category])\r\n     return state;\r\n}\r\n","\r\n//Llama a la funcion para agregar las categorias asi como darle estructura \r\nimport React from 'react';\r\nimport { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = ( ) =>{\r\n    const [categorias, setCategorias] = useState( ['Game of Thrones']);\r\n    return(\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategorias={setCategorias}></AddCategory>\r\n            <hr></hr>\r\n            <ol>\r\n                {\r\n                categorias.map( (category) =>\r\n                        <GifGrid \r\n                            key={category}\r\n                            category={category}>\r\n                        </GifGrid>\r\n                    )\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n\r\n}","//Renderiza la pagina \n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {GifExpertApp} from './GifExpertApp';\n\nReactDOM.render(\n    <GifExpertApp/>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}